USE employees;
-- Seleccion de Tablas 
select * from  employees;
select * from dept_emp;
select * from dept_manager;
select * from salaries ;
select * from titles;
select * from departments;
-- Taller de Bases de datos 
-- Seccion 1 --
-- Conteo General: ¿Cuántos empleados hay en total en la base de datos?
select count(emp_no)  as Total_empleados
from employees;

-- Salarios Extremos: ¿Cuál es el salario más alto y el salario más bajo que se ha pagado en la historia de la empresa?
select max(salary) as Salario_mas_alto , min(salary) as Salario_mas_Bajo from salaries;

-- Promedio Salarial: ¿Cuál es el salario promedio de todos los empleados?
select avg(salary) as Salario_Promedio from salaries;

-- Agrupación por Género: Genera un reporte que muestre cuántos empleados hay de cada género (M y F).
select gender, count(*) as Empleados_de_cada_genero
from employees
group by gender;

--  Conteo de Cargos: ¿Cuántos empleados han ostentado cada cargo (title) a lo largo del tiempo? Ordena los resultados del cargo más común al menos común.
select title , count(emp_no) as Empleados_ostentado_cada_cargo 
from titles
group by title  desc;

-- Filtro de Grupos con HAVING: Muestra los cargos que han sido ocupados por más de 75,000 personas.
select title , count(emp_no) as cargos_ocupados_por_mas_de_75_persona 
from titles
group by title 
having count(emp_no) > 75000;

-- Agrupación Múltiple: ¿Cuántos empleados masculinos y femeninos hay por cada cargo?
select titles.title,employees.gender, count(employees.emp_no) as Total
from employees
join titles  on employees.emp_no = titles.emp_no
group by titles.title, employees.gender;

select gender , count(emp_no) as total -- Opcional por si las moscas --
from employees
group by gender;

-- Seccion 2 --
-- Nombres de Departamentos: Muestra una lista de todos los empleados (emp_no, first_name) junto al nombre del departamento en el que trabajan actualmente.
select employees.emp_no , employees.first_name , departments.dept_name
from employees
join dept_emp on employees.emp_no =dept_emp.emp_no
join departments on dept_emp.dept_no = departments.dept_no
where dept_emp.to_date = '9999-01-01'
order by employees.emp_no ;

-- Empleados de un Departamento Específico: Obtén el nombre y apellido de todos los empleados que trabajan en el departamento de "Marketing".
select employees.first_name , employees.last_name , departments.dept_name
from employees
join dept_emp on employees.emp_no = dept_emp.emp_no
join departments on dept_emp.dept_no = departments.dept_no
where departments.dept_name ='Marketing';

-- Gerentes Actuales: Genera una lista de los gerentes de departamento (managers) actuales, mostrando su número de empleado, nombre completo y elnombre del departamento que dirigen.
select dept_manager.emp_no , employees.first_name , employees.last_name , departments.dept_name
from employees
join dept_manager on employees.emp_no = dept_manager.emp_no
join departments on  dept_manager.dept_no = departments.dept_no
where dept_manager.to_date = '9999-01-01'; -- Actuales--

-- Salario por Departamento: Calcula el salario promedio actual para cada departamento. El reporte debe mostrar el nombre del departamento y su salario promedio.
select departments.dept_name , avg(salary) as  Salario_promedio
from salaries 
join dept_emp on salaries.emp_no = dept_emp.emp_no
join  departments on dept_emp.dept_no = departments.dept_no
where salaries.to_date =  '9999-01-01'
and dept_emp.to_date = '9999-01-01'
group by departments.dept_name;

--  Historial de Cargos de un Empleado: Muestra todos los cargos que ha tenido el empleado número 10006, junto con las fechas de inicio y fin de cada cargo.
select employees.emp_no , titles.title , titles.from_date , titles.to_date
from employees
join titles on employees.emp_no = titles.emp_no 
where employees.emp_no = '10006'
order by titles.from_date;

-- 13. Departamentos sin Empleados (LEFT JOIN): ¿Hay algún departamento que no tenga empleados asignados? (Esta consulta teórica te ayudará a entender LEFT JOIN).
select employees.emp_no , departments.dept_name 
from employees
join dept_emp on employees.emp_no = dept_emp.emp_no
left join departments on dept_emp.dept_no = departments.dept_no;

insert into departments (dept_no ,  dept_name)
values ('99999','no binario');


SELECT d.dept_name
FROM departments d
LEFT JOIN dept_emp de ON d.dept_no = de.dept_no
WHERE de.emp_no IS NULL;

-- 14. Salario Actual del Empleado: Obtén el nombre, apellido y el salario actual de todos los empleados.
select employees.first_name , employees.last_name , salaries.salary
from employees
join salaries on employees.emp_no = salaries.emp_no 
where salaries.to_date =  '9999-01-01';

-- 15. Salarios por Encima del Promedio: Encuentra a todos los empleados cuyo salario actual es mayor que el salario promedio de toda la empresa.
select employees.emp_no , salaries.salary
from employees
join salaries on employees.emp_no = salaries.emp_no
where salaries.to_date =  '9999-01-01'
and salaries.salary > ( select avg(salary)
						from salaries
						where to_date =  '9999-01-01');

-- 16. Nombres de los Gerentes: Usando una subconsulta con IN, muestra el nombre y apellido de todas las personas que son o han sido gerentes de un departamento.
select employees.emp_no , employees.first_name ,employees.last_name
from employees
where employees.emp_no  in (
	select dept_manager.emp_no
    from dept_manager );
    
--  17. Empleados que no son Gerentes: Encuentra a todos los empleados que nunca han sido gerentes de un departamento, usando NOT IN.
select employees.emp_no , employees.first_name ,employees.last_name
from employees
where employees.emp_no  not in (
	select dept_manager.emp_no
    from dept_manager );
    
-- 18.Último Empleado Contratado: ¿Quién es el último empleado que fue contratado? Muestra su nombre completo y fecha de contratación.
select employees.first_name , employees.last_name , employees.hire_date
from employees
order by employees.hire_date desc
limit 1;

-- 19.Jefes del Departamento de "Development": Obtén los nombres de todos los gerentes que han dirigido el departamento de "Development".
select dept_manager.emp_no, employees.first_name , departments.dept_name
from dept_manager
join  employees on dept_manager.emp_no = employees.emp_no
join departments on dept_manager.dept_no = departments.dept_no
where departments.dept_name = 'Development';

-- 20. Empleados con el Salario Máximo: Encuentra al empleado (o empleados) que tiene el salario más alto registrado en la tabla de salarios.
select employees.emp_no , salaries.salary
from employees
join salaries on employees.emp_no = salaries.emp_no
where salaries.salary = (select max(salary)
						from salaries);

-- 21. Nombres Completos: Muestra una lista de los primeros 100 empleados con su nombre y apellido combinados en una sola columna llamada nombre_completo.
select employees.emp_no, concat(first_name, ' ' , last_name) as nombre_completo
from employees
limit 100;

-- 22.Antigüedad del Empleado: Calcula la antigüedad en años de cada empleado(desde hire_date hasta la fecha actual). Muestra el número de empleado y su antigüedad.
SELECT emp_no,
       TIMESTAMPDIFF(year, hire_date, curdate()) AS antiguedad_aprox
FROM employees;

--  Categorización de Salarios con CASE: Clasifica los salarios actuales de los empleados en tres categorías:
select emp_no , salary,
case
	when salary < 50000 then 'Bajo'
    when salary > 90000 then 'Alto'
    else  'medio'
    end as Clasificacion_salario
from salaries
 where to_date = '9999-01-01';
 
 --  24. Mes de Contratación: Genera un reporte que cuente cuántos empleados fueron contratados en cada mes del año (independientemente del año).
    select monthname(hire_date)  as mes , 
		count(emp_no) as total 
    from employees
	group by  hire_date; 
    
-- 25. Iniciales de Empleados: Crea una columna que muestre las iniciales de cada empleado (por ejemplo, para 'Georgi Facello' sería 'G.F.').
select concat(substring(first_name, 1, 1), '.', substring(last_name, 1, 1)) as abreviacion
from employees;
    
-- 26. Departamento con el Mejor Salario Promedio:
select departments.dept_name, avg(salaries.salary)
from departments
join dept_emp on departments.dept_no = dept_emp.dept_no
join salaries on  dept_emp.emp_no = salaries.emp_no
where salaries.to_date = '9999-01-01'
and dept_emp.to_date = '9999-01-01'
group by departments.dept_name 
order by avg(salaries.salary) desc 
limit 1;


-- 27. Gerente con Más Tiempo en el Cargo: Encuentra al gerente que ha estado en su puesto por más tiempo. Muestra su nombre y el número de días en el cargo.
select dept_manager.emp_no, employees.first_name, timestampdiff(day, dept_manager.from_date, curdate()) as Numero_de_dias
from dept_manager
join employees on dept_manager.emp_no = employees.emp_no
order by Numero_de_dias desc
limit 1;

-- 28. Incremento Salarial por Empleado: Para el empleado 10001, calcula la diferencia entre su primer salario y su salario actual.
SELECT s1.emp_no,
       s1.salary AS salario_inicial,
       s2.salary AS salario_actual,
       (s2.salary - s1.salary) AS diferencia
FROM salaries s1
JOIN salaries s2 
       ON s1.emp_no = s2.emp_no
WHERE s1.emp_no = '10001'
  AND s1.from_date = (SELECT MIN(from_date) FROM salaries WHERE emp_no = 10001)
  AND s2.to_date = '9999-01-01';
  
  -- 30. El Ingeniero Mejor Pagado: ¿Quién es el 'Senior Engineer' con el salario actual más alto en toda la empresa? Muestra su nombre, apellido y salario.
SELECT employees.first_name, employees.last_name, salaries.salary
FROM employees 
JOIN titles  ON employees.emp_no = titles.emp_no
JOIN salaries  ON employees.emp_no = salaries.emp_no
WHERE titles.title = 'Senior Engineer'
  AND salaries.to_date = '9999-01-01'
ORDER BY salaries.salary DESC
LIMIT 1;
